{"version":3,"sources":["assets/gratitude.jpg","assets/gamechanger.jpg","assets/cheersforpeers.jpg","assets/raisetheroof.jpg","App.js","reportWebVitals.js","index.js"],"names":["StyledWrapper","styled","div","StyledHeader","h1","StyledForm","form","StyledInputContainer","StyledRadioContainer","StyledImage","img","p","App","useForm","register","handleSubmit","useState","userData","setUserData","useEffect","a","fetch","method","result","json","body","console","log","fetchUsers","onSubmit","data","imageUrl","userId","level","parseInt","baseUrl","headers","JSON","stringify","text","then","response","status","ok","alert","message","catch","error","name","id","ref","required","map","user","value","placeholder","type","src","gratitude","for","cheersforpeers","gamechanger","raisetheroof","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4addbcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gratitude.0135e22c.jpg\";","export default __webpack_public_path__ + \"static/media/gamechanger.8fb66372.jpg\";","export default __webpack_public_path__ + \"static/media/cheersforpeers.81a4914b.jpg\";","export default __webpack_public_path__ + \"static/media/raisetheroof.d804c118.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\n\nimport gratitude from \"./assets/gratitude.jpg\";\nimport gamechanger from \"./assets/gamechanger.jpg\";\nimport cheersforpeers from \"./assets/cheersforpeers.jpg\";\nimport raisetheroof from \"./assets/raisetheroof.jpg\";\n\nconst StyledWrapper = styled.div`\n  margin: 20px;\n`;\n\nconst StyledHeader = styled.h1`\n  text-align: center;\n`;\n\nconst StyledForm = styled.form`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  grid-auto-rows: minmax(100px, auto);\n`;\n\nconst StyledInputContainer = styled.div`\n  grid-column: 1;\n  grid-row: 1 / 5;\n`;\n\nconst StyledRadioContainer = styled.div`\n  grid-column: 2 / 4;\n  grid-row: 1 / 3;\n`;\n\nconst StyledImage = styled.img`\n  width: 70px;\n  height: auto;\n`;\n\nconst StyledValidation = styled.p`\n  color: #bf1650;\n  ::before {\n    display: inline;\n    content: \"âš  \";\n  }\n`;\n\nexport default function App() {\n  const { register, handleSubmit } = useForm();\n  const [userData, setUserData] = useState([]);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const { userId } = data;\n\n    const level = parseInt(data.level, 10);\n    const baseUrl = \"https://bmccaw.github.io/recognition-app/\";\n    let imageUrl;\n    switch (level) {\n      case 5:\n        imageUrl = `${baseUrl}gratitude.jpg`;\n        break;\n      case 10:\n        imageUrl = `${baseUrl}cheersforpeers.jpg`;\n        break;\n      case 20:\n        imageUrl = `${baseUrl}gamechanger.jpg`;\n        break;\n      case 25:\n        imageUrl = `${baseUrl}raisetheroof.jpg`;\n        break;\n      default:\n        console.log(\"Unknown level \", level);\n    }\n\n    // TODO URL should be based on user (currently hard coded)\n    fetch(\n      `https://yfvnkbux6j.execute-api.us-east-1.amazonaws.com/users/${userId}/recognize`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          text: data.text,\n          imageUrl: imageUrl,\n          level: level,\n        }),\n      }\n    )\n      .then(function (response) {\n        console.log(response);\n        console.log(\"response.status: \", response.status);\n        console.log(\"response.ok: \", response.ok);\n        if (response.ok) {\n          alert(\"Recognition sent!\");\n        } else {\n          return response.json();\n        }\n      })\n      .then((data) => {\n        console.log(\"data:\", data);\n        if (data && data.message) {\n          alert(data.message);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        alert(\"Error sending recognition!\");\n      });\n  };\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const result = await fetch(\n          `https://yfvnkbux6j.execute-api.us-east-1.amazonaws.com/users/`,\n          {\n            method: `GET`,\n          }\n        );\n\n        const body = await result.json();\n        console.log(body);\n        setUserData(body);\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  return (\n    <StyledWrapper>\n      <StyledHeader>Workgrid Rockstar!</StyledHeader>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <StyledInputContainer>\n          <p>Who would you like to recognize?</p>\n          <select\n            name=\"userId\"\n            id=\"userId\"\n            ref={register({ required: \"This input is required.\" })}\n          >\n            {userData.map((user) => {\n              return (\n                <option name=\"user\" key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n          <p>Tell us why you think they are a rockstar...</p>\n          <textarea\n            name=\"text\"\n            placeholder=\"Add a message...\"\n            ref={register({ required: \"This input is required.\" })}\n          />\n        </StyledInputContainer>\n        <StyledRadioContainer>\n          <p>Select your gift level...</p>\n          <input\n            type=\"radio\"\n            id=\"Starbucks\"\n            name=\"level\"\n            value=\"5\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={gratitude} />\n          <label for=\"5\">Gratitude: $5 Starbucks Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Starbucks\"\n            name=\"level\"\n            value=\"10\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={cheersforpeers} />\n          <label for=\"10\">Cheers for Peers: $10 Starbucks Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Amazon\"\n            name=\"level\"\n            value=\"20\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={gamechanger} />\n          <label for=\"20\">Game Changer: $20 Amazon Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Amazon\"\n            name=\"level\"\n            value=\"25\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={raisetheroof} />\n          <label for=\"25\">Raise the Roof: $25 Amazon Gift Card</label>\n          <p />\n          <input type=\"submit\" />\n        </StyledRadioContainer>\n      </StyledForm>\n    </StyledWrapper>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}