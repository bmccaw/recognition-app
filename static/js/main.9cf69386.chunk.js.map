{"version":3,"sources":["assets/gratitude.jpg","assets/gamechanger.jpg","assets/cheersforpeers.jpg","assets/raisetheroof.jpg","App.js","reportWebVitals.js","index.js"],"names":["StyledWrapper","styled","div","StyledHeader","h1","StyledForm","form","StyledInputContainer","StyledRadioContainer","StyledImage","img","StyledValidation","p","App","useForm","register","handleSubmit","errors","useEffect","a","fetch","method","then","response","json","data","console","log","fetchUsers","onSubmit","imageUrl","level","parseInt","baseUrl","mode","headers","Accept","body","JSON","stringify","text","status","ok","catch","error","alert","type","placeholder","name","ref","required","pattern","render","messages","Object","entries","map","message","id","value","src","gratitude","for","cheersforpeers","gamechanger","raisetheroof","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf69386.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gratitude.0135e22c.jpg\";","export default __webpack_public_path__ + \"static/media/gamechanger.8fb66372.jpg\";","export default __webpack_public_path__ + \"static/media/cheersforpeers.81a4914b.jpg\";","export default __webpack_public_path__ + \"static/media/raisetheroof.d804c118.jpg\";","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport styled from \"styled-components\";\n\nimport gratitude from \"./assets/gratitude.jpg\";\nimport gamechanger from \"./assets/gamechanger.jpg\";\nimport cheersforpeers from \"./assets/cheersforpeers.jpg\";\nimport raisetheroof from \"./assets/raisetheroof.jpg\";\n\nconst StyledWrapper = styled.div`\n  margin: 20px;\n`;\n\nconst StyledHeader = styled.h1`\n  text-align: center;\n`;\n\nconst StyledForm = styled.form`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  grid-auto-rows: minmax(100px, auto);\n`;\n\nconst StyledInputContainer = styled.div`\n  grid-column: 1;\n  grid-row: 1 / 5;\n`;\n\nconst StyledRadioContainer = styled.div`\n  grid-column: 2 / 4;\n  grid-row: 1 / 3;\n`;\n\nconst StyledImage = styled.img`\n  width: 70px;\n  height: auto;\n`;\n\nconst StyledValidation = styled.p`\n  color: #bf1650;\n  ::before {\n    display: inline;\n    content: \"âš  \";\n  }\n`;\n\nexport default function App() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data) => {\n    console.log(data);\n\n    const level = parseInt(data.level, 10);\n    const baseUrl = \"https://bmccaw.github.io/recognition-app/\";\n    let imageUrl;\n    switch (level) {\n      case 5:\n        imageUrl = `${baseUrl}gratitude.jpg`;\n        break;\n      case 10:\n        imageUrl = `${baseUrl}cheersforpeers.jpg`;\n        break;\n      case 20:\n        imageUrl = `${baseUrl}gamechanger.jpg`;\n        break;\n      case 25:\n        imageUrl = `${baseUrl}raisetheroof.jpg`;\n        break;\n      default:\n        console.log(\"Unknown level \", level);\n    }\n\n    // TODO URL should be based on user (currently hard coded)\n    fetch(\n      \"https://yfvnkbux6j.execute-api.us-east-1.amazonaws.com/users/15/recognize\",\n      {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"*/*\",\n          \"Accept-Encoding\": \"gzip, deflate, br\",\n        },\n        body: JSON.stringify({\n          text: data.text,\n          imageUrl: imageUrl,\n          level: level,\n        }),\n      }\n    )\n      .then(function (response) {\n        console.log(response);\n        console.log(\"response.status: \", response.status);\n        console.log(\"response.ok: \", response.ok);\n        // TODO: response.ok is always false\n        // if (response.ok) {\n        //   alert('Recognition sent!')\n        // } else {\n        //   alert('Response not OK!')\n        // }\n      })\n      .catch(function (error) {\n        console.log(error);\n        alert(\"Error sending recognition!\");\n      });\n  };\n\n  useEffect(() => {\n    async function fetchUsers() {\n      await fetch(\n        \"https://yfvnkbux6j.execute-api.us-east-1.amazonaws.com/users/\",\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    }\n    fetchUsers();\n  }, []);\n\n  return (\n    <StyledWrapper>\n      <StyledHeader>Workgrid Rockstar!</StyledHeader>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <StyledInputContainer>\n          <p>Who would you like to recognize?</p>\n          <input\n            type=\"text\"\n            placeholder=\"Recipient Email\"\n            name=\"RecipientEmail\"\n            ref={register({\n              required: \"This input is required.\",\n              pattern: /^\\S+@\\S+$/i,\n            })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"RecipientEmail\"\n            render={({ messages }) => {\n              console.log(\"messages\", messages);\n              return messages\n                ? Object.entries(messages).map(([type, message]) => (\n                    <StyledValidation key={type}>{message}</StyledValidation>\n                  ))\n                : null;\n            }}\n          />\n          <p>Tell us why you think they are a rockstar...</p>\n          <textarea\n            name=\"text\"\n            placeholder=\"Add a message...\"\n            ref={register({ required: \"This input is required.\" })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"text\"\n            render={({ messages }) => {\n              console.log(\"messages\", messages);\n              return messages\n                ? Object.entries(messages).map(([type, message]) => (\n                    <StyledValidation key={type}>{message}</StyledValidation>\n                  ))\n                : null;\n            }}\n          />\n        </StyledInputContainer>\n        <StyledRadioContainer>\n          <p>Select your gift level...</p>\n          <input\n            type=\"radio\"\n            id=\"Starbucks\"\n            name=\"level\"\n            value=\"5\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={gratitude} />\n          <label for=\"5\">Gratitude: $5 Starbucks Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Starbucks\"\n            name=\"level\"\n            value=\"10\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={cheersforpeers} />\n          <label for=\"10\">Cheers for Peers: $10 Starbucks Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Amazon\"\n            name=\"level\"\n            value=\"20\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={gamechanger} />\n          <label for=\"20\">Game Changer: $20 Amazon Gift Card</label>\n          <p />\n          <input\n            type=\"radio\"\n            id=\"Amazon\"\n            name=\"level\"\n            value=\"25\"\n            ref={register({ required: true })}\n          />\n          <StyledImage src={raisetheroof} />\n          <label for=\"25\">Raise the Roof: $25 Amazon Gift Card</label>\n          <p />\n          <input type=\"submit\" />\n        </StyledRadioContainer>\n      </StyledForm>\n    </StyledWrapper>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}